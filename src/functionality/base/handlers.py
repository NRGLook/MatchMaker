from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from src.config.database_config import get_async_session
from src.functionality.event.possibilities import start_event_creation, view_events, edit_event, delete_event
from src.models.database_models import User
from src.utils.helpers import convert_telegram_id_to_uuid


async def empty_commands(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Clears the bot's command list."""
    await context.bot.set_my_commands([])
    await update.message.reply_text(
        "–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã. –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Ç–µ–ø–µ—Ä—å –ø—É—Å—Ç."
    )


async def show_commands(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Displays available commands."""
    commands_list = (
        "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
        "/menu - –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é\n"
        "/show_commands - –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n"
        "/view_profile - –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è\n"
        "/edit_profile - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è\n"
        "–Ø—á–µ–π–∫–∏ 1-4 - –í—ã–±–æ—Ä —è—á–µ–µ–∫ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è\n"
    )

    if update.callback_query:
        await update.callback_query.answer()
        await update.callback_query.message.edit_text(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n{commands_list}")
    else:
        await update.message.reply_text(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n{commands_list}")


async def show_menu(
    update: Update,
    context: ContextTypes.DEFAULT_TYPE
) -> None:
    """Display a pop-up menu with actions and buttons."""
    user_id = convert_telegram_id_to_uuid(update.effective_user.id)

    keyboard = [
        [InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="view_profile")],
        [InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="edit_profile")],
        [InlineKeyboardButton(f"–Ø—á–µ–π–∫–∞ 1", callback_data="cell_1"),
         InlineKeyboardButton(f"–Ø—á–µ–π–∫–∞ 2", callback_data="cell_2")],
        [InlineKeyboardButton(f"–Ø—á–µ–π–∫–∞ 3", callback_data="cell_3"),
         InlineKeyboardButton(f"–Ø—á–µ–π–∫–∞ 4", callback_data="cell_4")],
        [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ", callback_data="create_event"),
        InlineKeyboardButton("–ú–æ–∏ —Å–æ–±—ã—Ç–∏—è", callback_data="view_events"),
        InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ", callback_data="edit_event"),
        InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ", callback_data="delete_event")],
        [InlineKeyboardButton("–ú–µ–Ω—é", callback_data="menu")],
        [InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–º–∞–Ω–¥", callback_data="show_commands")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    elif update.callback_query:
        query = update.callback_query
        await query.answer()
        await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)


async def handle_grid_action(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle actions on the grid (e.g. view profile and return to menu)."""
    query = update.callback_query
    await query.answer()

    if query.data == "view_profile":
        async with get_async_session() as session:
            user_id = convert_telegram_id_to_uuid(update.effective_user.id)
            user = await session.get(User, user_id)

            if user:
                profile = (
                    f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
                    f"–ò–º—è: {user.first_name}\n"
                    f"–§–∞–º–∏–ª–∏—è: {user.last_name}\n"
                    f"–í–æ–∑—Ä–∞—Å—Ç: {user.age}\n"
                    f"–û–ø—ã—Ç: {user.experience}\n"
                )
                await query.message.edit_text(profile)
            else:
                await query.message.edit_text("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    elif query.data == "menu":
        await show_menu(update, context)
    elif query.data == "show_commands":
        await show_commands(update, context)
    elif query.data == "create_event":
        return await start_event_creation(update, context)
    elif query.data == "view_events":
        return await view_events(update, context)
    elif query.data == "edit_event":
        return await edit_event(update, context)
    elif query.data == "delete_event":
        return await delete_event(update, context)
    else:
        await query.message.edit_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {query.data}")
